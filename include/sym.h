TSYM(TS_VOID,      	"void")
TSYM(TS_SIGNED,    	"signed")
TSYM(TS_UNSIGNED,  	"unsigned")
TSYM(TS_CHAR,      	"char")
TSYM(TS_SHORT,     	"short")
TSYM(TS_INT,       	"int")
TSYM(TS_LONG,      	"long")
TSYM(TS_TYPEDEF,    "typedef")
TSYM(TS_EXTERN,		"extern")
TSYM(TS_STATIC,		"static")
TSYM(TS_STRUCT,    	"struct")
TSYM(TS_UNION,     	"union")
TSYM(TS_ENUM,      	"enum")
TSYM(TS_GOTO,      	"goto")
TSYM(TS_CONTINUE,  	"continue")	
TSYM(TS_BREAK,     	"break")
TSYM(TS_RETURN,    	"return")
TSYM(TS_CASE,      	"case")
TSYM(TS_DEFAULT,   	"default")
TSYM(TS_DO,        	"do")
TSYM(TS_WHILE,     	"while")
TSYM(TS_FOR,       	"for")
TSYM(TS_IF,        	"if")
TSYM(TS_ELSE,      	"else")
TSYM(TS_SWITCH,    	"switch")
TSYM(TS_DOT,          	".")
TSYM(TS_POINTER,       	"->")
TSYM(TS_INC,           	"++")
TSYM(TS_DEC,           	"--")
TSYM(TS_NOT,			"!")
TSYM(TS_COMPL,			"~")
TSYM(TS_SIZEOF,    	"sizeof")
TSYM(TS_MUL,           	"*")
TSYM(TS_DIV,           	"/")
TSYM(TS_MOD,           	"%")
TSYM(TS_ADD,           	"+")
TSYM(TS_SUB,           	"-")
TSYM(TS_LSHIFT,        	"<<")
TSYM(TS_RSHIFT,        	">>")
TSYM(TS_LESS,          	"<")
TSYM(TS_GREATER,         ">")
TSYM(TS_GREATER_EQ,   	">=")
TSYM(TS_LESS_EQ,    	"<=")
TSYM(TS_EQ,         	"==")
TSYM(TS_NOT_EQ,       	"!=")
TSYM(TS_BITAND,        	"&")
TSYM(TS_BITXOR,			"^")
TSYM(TS_BITOR,         	"|")
TSYM(TS_AND,           	"&&")
TSYM(TS_OR,            	"||")
TSYM(TS_QUESTION,      	"?")
TSYM(TS_COLON,         	":")
TSYM(TS_ASSIGN,        	"=")
TSYM(TS_ADD_ASSIGN,    	"+=")
TSYM(TS_SUB_ASSIGN,    	"-=")
TSYM(TS_MUL_ASSIGN,    	"*=")
TSYM(TS_DIV_ASSIGN,    	"/=")
TSYM(TS_MOD_ASSIGN,    	"%=")
TSYM(TS_LSHIFT_ASSIGN, 	"<<=")
TSYM(TS_RSHIFT_ASSIGN, 	">>=")
TSYM(TS_BITAND_ASSIGN, 	"&=")
TSYM(TS_BITXOR_ASSIGN,  "^=")
TSYM(TS_BITOR_ASSIGN,  	"|=")
TSYM(TS_COMMA,        	",")
TSYM(TS_LBRACE,        	"{")
TSYM(TS_RBRACE,        	"}")
TSYM(TS_LPAREN,        	"(")
TSYM(TS_RPAREN,        	")")
TSYM(TS_LBRAKET,       	"[")
TSYM(TS_RBRAKET,       	"]")
TSYM(TS_ELLIPSE,       	"...")
TSYM(TS_SEMICOLON,    	";")
TSYM(TS_ID,				"ID")
TSYM(TS_CONSTANT,		"CONST")
TSYM(TS_STR,			"STR")
NONTSYM(NTS_BITAND_EXP, 			"AND-expression")
NONTSYM(NTS_ABSTRACT_DECLOR, 		"abstract-declarator")
NONTSYM(NTS_ADD_EXP,		 		"additive-expression")
NONTSYM(NTS_ARGUMENT_EXP_L, 		"argument-expression-list")
NONTSYM(NTS_ASSIGNMENT_EXP, 		"assignment-expression")
NONTSYM(NTS_ASSIGNMENT_OPTOR, 		"assignment-operator")
NONTSYM(NTS_BLOCK_ITEM, 			"block-item")
NONTSYM(NTS_BLOCK_ITEM_L, 			"block-item-list")
NONTSYM(NTS_CS_BLOCK, 				"case-block")
NONTSYM(NTS_CS_LAB_STM,	 			"case-labele-statement")
NONTSYM(NTS_CS_LAB_STM_L, 			"case-labele-statement-list")
NONTSYM(NTS_CST_EXP, 				"cast-expression")
NONTSYM(NTS_COMP_STM, 				"compound-statement")
NONTSYM(NTS_COND_EXP, 				"conditional-expression")
NONTSYM(NTS_CONST_EXP, 				"constant-expression")
NONTSYM(NTS_DECLON, 				"declaration")
NONTSYM(NTS_DECLON_L, 				"declaration-list")
NONTSYM(NTS_DECLON_SPF,		 		"declaration-specifiers")
NONTSYM(NTS_DECLOR, 				"declarator")
NONTSYM(NTS_DESIGON, 				"designation")
NONTSYM(NTS_DESIGOR, 				"designator")
NONTSYM(NTS_DESIGOR_L, 				"designator-list")
NONTSYM(NTS_DIRECT_ABSTRACT_DECLOR,	"direct-abstract-declarator")
NONTSYM(NTS_DIRECT_DECLOR, 			"direct-declarator")
NONTSYM(NTS_ENUM_SPF, 				"enum-specifier")
NONTSYM(NTS_ENUMON_CONST, 			"enumeration-constant")
NONTSYM(NTS_ENUMOR, 				"enumerator")
NONTSYM(NTS_ENUMOR_L, 				"enumerator-list")
NONTSYM(NTS_EQ_EXP,			 		"equality-expression")
NONTSYM(NTS_XOR_EXP, 				"exclusive-OR-expression")
NONTSYM(NTS_EXP, 					"expression")
NONTSYM(NTS_EXP_STM, 				"expression-statement")
NONTSYM(NTS_FUN_DEF, 				"function-definition")
NONTSYM(NTS_FUN_DEF_L, 				"function-definition-list")
NONTSYM(NTS_BITOR_EXP, 				"inclusive-OR-expression")
NONTSYM(NTS_INIT_DECLOR, 			"init-declarator")
NONTSYM(NTS_INIT_DECLOR_L, 			"init-declarator-list")
NONTSYM(NTS_INITER, 				"initializer")
NONTSYM(NTS_INITER_L,		 		"initializer-list")
NONTSYM(NTS_ITER_STM, 				"iteration-statement")
NONTSYM(NTS_JMP_STM, 				"jump-statement")
NONTSYM(NTS_LAB_STM, 				"labeled-statement")
NONTSYM(NTS_AND_EXP, 				"logical-AND-expression")
NONTSYM(NTS_OR_EXP, 				"logical-OR-expression")
NONTSYM(NTS_MUL_EXP,		 		"multiplicative-expression")
NONTSYM(NTS_PRMT_DECLON, 			"parameter-declaration")
NONTSYM(NTS_PRMT_L,	 				"parameter-list")
NONTSYM(NTS_PRMT_TP_L, 				"parameter-type-list")
NONTSYM(NTS_POINTER, 				"pointer")
NONTSYM(NTS_POSTFIX_EXP, 			"postfix-expression")
NONTSYM(NTS_PRIMARY_EXP, 			"primary-expression")
NONTSYM(NTS_RELAT_EXP, 				"relational-expression")
NONTSYM(NTS_SELECT_STM,				"selection-statement")
NONTSYM(NTS_SHIFT_EXP, 				"shift-expression")
NONTSYM(NTS_SPF_QUAL_L, 			"specifier-qualifier-list")
NONTSYM(NTS_STM, 					"statement")
NONTSYM(NTS_STORE_CLASS_SPF, 		"storage-class-specifier")
NONTSYM(NTS_STRUCT_DECLON, 			"struct-declaration")
NONTSYM(NTS_STRUCT_DECLON_L, 		"struct-declaration-list")
NONTSYM(NTS_STRUCT_DECLOR_L, 		"struct-declarator-list")
NONTSYM(NTS_STRUCT_SPF, 			"struct-specifier")
NONTSYM(NTS_TP_NAME, 				"type-name")
NONTSYM(NTS_TP_SPF, 				"type-specifier")
NONTSYM(NTS_TYPEDEF_NAME, 			"typedef-name")
NONTSYM(NTS_UNARY_EXP, 				"unary-expression")
NONTSYM(NTS_UNARY_OPTOR, 			"unary-operator")
NONTSYM(NTS_UNION_SPF, 				"union-specifier")
NONTSYM(NTS_TRANS_UNIT, 			"translation-unit")
